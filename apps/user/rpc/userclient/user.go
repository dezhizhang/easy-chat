// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: user.proto

package userclient

import (
	"context"

	"easy-chat/apps/user/rpc/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginReq     = user.LoginReq
	LoginResp    = user.LoginResp
	RegisterReq  = user.RegisterReq
	RegisterResp = user.RegisterResp
	Request      = user.Request
	Response     = user.Response
	User         = user.User
	UserInfoReq  = user.UserInfoReq
	UserInfoResp = user.UserInfoResp

	UserZrpcClient interface {
		// Ping 测试是否通的服务
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		// Login 用户用户登录
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
		// Register 用户注册
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
		// GetUserInfo 获取用户信息
		GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error)
	}

	defaultUserZrpcClient struct {
		cli zrpc.Client
	}
)

func NewUserZrpcClient(cli zrpc.Client) UserZrpcClient {
	return &defaultUserZrpcClient{
		cli: cli,
	}
}

// Ping 测试是否通的服务
func (m *defaultUserZrpcClient) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

// Login 用户用户登录
func (m *defaultUserZrpcClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

// Register 用户注册
func (m *defaultUserZrpcClient) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

// GetUserInfo 获取用户信息
func (m *defaultUserZrpcClient) GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}
