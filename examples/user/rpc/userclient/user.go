// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: user.proto

package userclient

import (
	"context"

	"easy-chat/examples/user/rpc/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserReq  = user.UserReq
	UserResp = user.UserResp

	User interface {
		GetUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) GetUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUser(ctx, in, opts...)
}
